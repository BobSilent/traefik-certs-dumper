name: Release Docker image

on:
  release:
    types: [created]
  push:
    branches : [release/*]

env:
  DOCKER_IMAGE: humenius/traefik-certs-dumper

jobs:
  release:
    name: Release normal (Docker)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare tags for normal build
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3.6.1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-sha: true
          tag-semver: |
            {{version}}
            {{major}}.{{minor}}
            {{major}}

      - name: Prepare tags for arm32v7 build
        id: docker_meta_arm32v7
        uses: crazy-max/ghaction-docker-meta@v3.6.1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-semver: |
            {{version}}-arm32v7
            {{major}}.{{minor}}-arm32v7
            {{major}}-arm32v7
          tag-custom: |
            arm32v7
          tag-latest: false

      - name: Prepare tags for arm64v8 build
        id: docker_meta_arm64v8
        uses: crazy-max/ghaction-docker-meta@v3.6.1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-semver: |
            {{version}}-arm64v8
            {{major}}.{{minor}}-arm64v8
            {{major}}-arm64v8
          tag-custom: |
            arm64v8
          tag-latest: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}
  
      - name: Build and publish image (arm32v7)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.armhf
          platforms: linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta_arm32v7.outputs.tags }}
          labels: ${{ steps.docker_meta_arm32v7.outputs.labels }}
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}

      - name: Build and publish image (arm64v8)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.aarch64
          platforms: linux/arm64/v8
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta_arm64v8.outputs.tags }}
          labels: ${{ steps.docker_meta_arm64v8.outputs.labels }}
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}

  release-alpine:
    name: Release Alpine
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare tags for normal build
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v3.6.1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-semver: |
            {{version}}-alpine
            {{major}}.{{minor}}-alpine
            {{major}}-alpine
          tag-custom: |
            alpine
            amd64-alpine
          tag-latest: false

      - name: Prepare tags for arm32v7 build
        id: docker_meta_arm32v7
        uses: crazy-max/ghaction-docker-meta@v3.6.1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-semver: |
            {{version}}-arm32v7-alpine
            {{major}}.{{minor}}-arm32v7-alpine
            {{major}}-arm32v7-alpine
          tag-custom: |
            arm32v7-alpine
          tag-latest: false

      - name: Prepare tags for arm64v8 build
        id: docker_meta_arm64v8
        uses: crazy-max/ghaction-docker-meta@v3.6.1
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tag-semver: |
            {{version}}-arm64v8-alpine
            {{major}}.{{minor}}-arm64v8-alpine
            {{major}}-arm64v8-alpine
          tag-custom: |
            arm64v8-alpine
          tag-latest: false

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./alpine/Dockerfile
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}
  
      - name: Build and publish image (arm32v7)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./alpine/Dockerfile.armhf
          platforms: linux/arm/v7
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta_arm32v7.outputs.tags }}
          labels: ${{ steps.docker_meta_arm32v7.outputs.labels }}
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}

      - name: Build and publish image (arm64v8)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./alpine/Dockerfile.aarch64
          platforms: linux/arm64/v8
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: ${{ steps.docker_meta_arm64v8.outputs.tags }}
          labels: ${{ steps.docker_meta_arm64v8.outputs.labels }}
          push: ${{ github.event_name == 'release' && github.event.action == 'created' }}
