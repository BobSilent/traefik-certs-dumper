name: Build and publish Docker images

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-publish-images:
    name: Build and publish Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Prepare version and creation date
        id: prep
        run: |
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's/^v\(.*\)/\1/')
          if [[ $VERSION =~ ^v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            MINOR=${VERSION%.*}
            MAJOR=${MINOR%.*}
          fi

          echo ::set-output name=version::${VERSION}
          echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo ::set-output name=minor::${MINOR}
          echo ::set-output name=major::${MAJOR}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and publish image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            humenius/traefik-certs-dumper:latest
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.version }}
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.minor }}
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.major }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
  
      - name: Build and publish image (arm32v7)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.armhf
          platforms: linux/arm/v7
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            humenius/traefik-certs-dumper:arm32v7
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.version }}-arm32v7
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.minor }}-arm32v7
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.major }}-arm32v7
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

      - name: Build and publish image (arm64v8)
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/Dockerfile.aarch64
          platforms: linux/arm64/v8
          push: false
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
          tags: |
            humenius/traefik-certs-dumper:arm64v8
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.version }}-arm64v8
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.minor }}-arm64v8
            humenius/traefik-certs-dumper:${{ steps.prep.outputs.major }}-arm64v8
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.version=${{ steps.prep.outputs.version }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}
